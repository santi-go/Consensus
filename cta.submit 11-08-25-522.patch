diff --git a/cta.submit.patch b/cta.submit.patch
new file mode 100644
index 0000000..e69de29
diff --git a/index.html b/index.html
index aacfb77..f57ca76 100644
--- a/index.html
+++ b/index.html
@@ -32,7 +32,7 @@
       </div>
 
       <div id="panel">
-        <button id="submit" form="consensus-proposal">Submit</button>
+        <button id="submit" form="consensus-proposal" disabled>Submit</button>
         <span></span>
       </div>
     </form>
diff --git a/src/js/circle.js b/src/js/circle.js
index 68c9b38..134d8bf 100644
--- a/src/js/circle.js
+++ b/src/js/circle.js
@@ -1,4 +1,6 @@
 import {Involved} from "./involved"
+import {SendPropose} from './send_propose'
+
 
 export let Circle = {
   circle: [],
@@ -37,6 +39,7 @@ export let Circle = {
     let emailsList = this.parseEmail(data.detail)
     this.addListEmailsToCircle(emailsList)
     Involved.render(this.circle)
+    SendPropose.validateField("circle", true)
   },
 
   addListEmailsToCircle: function (emailsList) {
@@ -67,7 +70,8 @@ export let Circle = {
   removeEmailFromCircle: function (data) {
     this.removeEmail(data.detail)
     Involved.render(this.circle)
-  },
+    SendPropose.validateField("circle", true)
+    },
 
   removeEmail: function (email) {
     let result = []
diff --git a/src/js/proposal.js b/src/js/proposal.js
index 2bec2ce..f681008 100644
--- a/src/js/proposal.js
+++ b/src/js/proposal.js
@@ -1,3 +1,5 @@
+import {SendPropose} from './send_propose'
+
 import {ProposalView} from "./proposal_view"
 
 export var Proposal = {
@@ -17,6 +19,7 @@ export var Proposal = {
     let text = this.sanitize(pastedText.detail)
     let newBlock = this.addBlockTags(text)
     ProposalView.render(newBlock)
+    SendPropose.validateField("proposal", true)
   },
 
   sanitize: function (text) {
// diff --git a/src/js/proposer_logic.js b/src/js/proposer_logic.js
// index 920e38c..5f8380f 100644
// --- a/src/js/proposer_logic.js
// +++ b/src/js/proposer_logic.js
// @@ -1,3 +1,4 @@
// +import {SendPropose} from './send_propose'
//  import {Proposer} from "./proposer"
 
//  export let ProposerLogic = {
// @@ -27,6 +28,7 @@ export let ProposerLogic = {
//      if (validated) {
//        this.proposerEmail = email
//      }
// +    SendPropose.validateField("proposer", validated)
//      return validated
//    },
 
diff --git a/src/js/send_propose.js b/src/js/send_propose.js
index fbd4100..368d273 100644
--- a/src/js/send_propose.js
+++ b/src/js/send_propose.js
@@ -1,11 +1,17 @@
-import {Circle} from './circle'
 import {ProposerLogic} from './proposer_logic'
+import {Circle} from './circle'
 import {Proposal} from './proposal'
 let XMLHttpRequest = require('xhr2')
 
 export let SendPropose = {
   url: 'http://0.0.0.0:4567/send-mail',
 
+  fields: {
+    proposer: false,
+    involved: 0,
+    proposal: false
+  },
+
   initialize: function (containerId) {
     this.container = document.getElementById(containerId)
     this.prepareEvents()
@@ -16,6 +22,22 @@ export let SendPropose = {
     submitButton.addEventListener('click', this.submitProposal.bind(this))
   },
 
+  validateField: function (caller, validate) {
+    if (caller === "proposer") this.fields.proposer = validate
+    if (caller === "circle") this.fields.involved = Circle.involved().length
+    if (caller === "proposal") this.fields.proposal = validate
+
+    if (this.fields.proposer &&  this.fields.involved > 0 && this.fields.proposal ) {
+      this.toggleSubmitButton(false)
+    }
+    else this.toggleSubmitButton(true)
+  },
+
+  toggleSubmitButton: function (value) {
+    let submitButton = this.container.querySelector('#submit')
+    submitButton.disabled = value
+    },
+
   submitProposal: function () {
     let url = this.url
     let proposer = ProposerLogic.proposerEmail.toString()
diff --git a/test/unit/submit_test.js b/test/unit/submit_test.js
new file mode 100644
index 0000000..c769303
--- /dev/null
+++ b/test/unit/submit_test.js
@@ -0,0 +1,15 @@
+var expect = require('chai').expect
+var {SendPropose} = require ('../../src/js/send_propose')
+var {ProposerLogic} = require ('../../src/js/proposer_logic')
+
+
+describe('The submit button', () => {
+  it('is enabled when proposer is valid', () => {
+    let email = "hola@devscola.org"
+    let valid = ProposerLogic.validateEmail(email)
+    console.log(email)
+    let submitButtonStatus = SendPropose.toggleSubmitButton(!valid)
+
+    expect(submitButtonStatus).to.eq(false)
+  })
+})
